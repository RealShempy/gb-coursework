@startuml Entity
allowmixing
left to right direction
skinparam packageStyle rectangle
skinparam componentStyle rectangle

component App {
    port UserDetailsInterface
    port NotificationInterface
    port AuthenticationInterface
    port ClientDetailsInterface
    port OrderDetailsInterface

    object User {
        name: String
        link: UserDetails
        ...
    }

    object Client {
        link: ClientDetails
        orders: Order[]
        requests: Request[]
        userCreated: User
        ...
    }

    object Order {
        client: Client
        link: OrderDetails
        userCreated: User
        services: Service[]
    }

    object Service {
        ...
    }

    object Request {
        client: Client
        message: String
        createdAt: DateTime
        updatedAt: DateTime
        userCreated: User
        userResponsible: User
        tasks: Task[]
    }

    object Dashboard {
        name: String
        user: User
        ...
    }

    object Task {
        request: Request
        userCreated: User
        userResponsible: User
        userSupervisor: User
        status: TaskStatus
        comments: TaskComment[]
        history: TaskHistory[]
        ...
    }

    object TaskStatus {
        ...
    }

    object TaskHistory {
        ...
    }

    object TaskComment {
        ...
    }
}

component Legacy {
    object Notification
    object Authentication
    object UserDetails
    object ClientDetails
    object OrderDetails
}

Order -- Service
Order -- Client
Request -- Client
Request -- Task
User -- Task
User -- Client
User -- Dashboard
TaskStatus -- Task
TaskHistory -- Task
TaskComment -- Task


OrderDetailsInterface --- Order
UserDetailsInterface --- User
ClientDetailsInterface --- Client

Legacy <-- NotificationInterface
Legacy <--> AuthenticationInterface
Legacy --> UserDetailsInterface
Legacy --> ClientDetailsInterface
Legacy --> OrderDetailsInterface

@enduml

@startuml SequenceGlobal

actor       Client as Client
actor       Manager1 as User
actor       Manager2 as User2

Client -> User : Устное или \nписьменное обращение
User -> App : Ввод данных обращения
App <- Legacy : Список клиентов
App <- Legacy : Список заказов

User -> App : : Создание обращеня
App -> App : Создание задач на основании обращения
App -> Legacy: Создание оповещений о новых задачах
User2 <- Legacy: Оповещений о задачах
User2 -> App: Просмотр доски задач
User2 -> User2: Обработка и выполнение задачи
User2 -> App: Смена статуса задачи, \nзакрытие
App -> Legacy: Создание оповещений о закрытии задач
Client <- Legacy: Оповещение о решении задачи

@enduml


@startuml SequenceApp

actor       Client as Client
actor       Manager1 as User
actor       Manager2 as User2

Client -> User : Устное или \nписьменное обращение
User -> App : Ввод данных обращения
App <- Legacy : Список клиентов
App <- Legacy : Список заказов

User -> App : : Создание обращеня
App -> App : Создание задач на основании обращения
App -> Legacy: Создание оповещений о новых задачах
User2 <- Legacy: Оповещений о задачах
User2 -> App: Просмотр доски задач
User2 -> User2: Обработка и выполнение задачи
User2 -> App: Смена статуса задачи, \nзакрытие
App -> Legacy: Создание оповещений о закрытии задач
Client <- Legacy: Оповещение о решении задачи

@enduml