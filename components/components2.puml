@startuml
!theme vibrant
'skinparam monochrome true

!define SPRITESURL https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.0/sprites
!includeurl SPRITESURL/aws.puml
!includeurl SPRITESURL/kafka.puml

<style>
component {
  HorizontalAlignment center
}
</style>

title
<size:25>Диаграмма компонентов</size>
end title

interface " " as I_Orders
interface " " as I_ClientsRequests
interface " " as I_Tasks
interface " " as I_Clients
interface " " as I_Contract
interface " " as I_Users
'interface " " as I_UsersDashboard
'interface " " as I_UsersKeycloak

component "Requests\nservice" as Request {
  portout " " as p0
}

[Auth service] as Users
[Clients service] as Clients
[Orders service] as Orders
[Tasks service] as Tasks
[Upload service] as Upload
[Contracts service] as Contracts

'TODO не знаю как отобразить взаимодействие
'[CDC service] as CDC
'[Notification service] as Notify

'Request -down- Api
component "API\ngateway" as API
p0 -down- [API]

rectangle "WEB app" as WEB #FEFECE
'component [KeyCloak] as keyCloak #ADD1A2
'[API] -left- keyCloak
[API] <.. WEB

'component [Dashboard\nservice] as Dashboard
[API] .right. Users
'[API] .. Dashboard

'Dashboard -right-( I_UsersDashboard
'Users -right- I_UsersDashboard

'Dashboard -left-( I_UsersKeycloak
'keyCloak -left- I_UsersKeycloak

Orders -left- I_Orders
Request -left-( I_Orders

Tasks -down- I_Tasks
Orders -up-( I_Tasks

Clients -down- I_ClientsRequests
Request -up-( I_ClientsRequests

Upload -up- I_Contract
Contracts -up-( I_Contract

Contracts -left- I_Clients
Clients -up-( I_Clients

Users -up- I_Users
Request -down-( I_Users

database UploadDB
Upload ..> UploadDB

database RequestDB
Request .up.> RequestDB

database DB
Users ..> DB

database ClientsDB
Clients .left.> ClientsDB

database OrdersDB
Orders ..> OrdersDB
'
database TasksDB
Tasks ..> TasksDB

database ContractsDB
Contracts ..> ContractsDB


@enduml